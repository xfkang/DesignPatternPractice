@startuml

title __LISTADAPTER's Class Diagram__\n

  namespace com.itbird.design {
    namespace observer.listadapter {
      abstract class com.itbird.design.observer.listadapter.BaseAdapter {
          - mAutofillOptions : CharSequence[]
          - mDataSetObservable : DataSetObservable
          + areAllItemsEnabled()
          + getAutofillOptions()
          + getDropDownView()
          + getItemViewType()
          + getViewTypeCount()
          + hasStableIds()
          + isEmpty()
          + isEnabled()
          + notifyDataSetChanged()
          + notifyDataSetInvalidated()
          + registerDataSetObserver()
          + setAutofillOptions()
          + unregisterDataSetObserver()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace observer.listadapter {
      class com.itbird.design.observer.listadapter.DataSetObservable {
          + notifyChanged()
          + notifyInvalidated()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace observer.listadapter {
      abstract class com.itbird.design.observer.listadapter.DataSetObserver {
          + onChanged()
          + onInvalidated()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace observer.listadapter {
      abstract class com.itbird.design.observer.listadapter.Observable {
          # mObservers : ArrayList<T>
          + registerObserver()
          + unregisterAll()
          + unregisterObserver()
      }
    }
  }
  

  com.itbird.design.observer.listadapter.BaseAdapter .up.|> android.widget.ListAdapter
  com.itbird.design.observer.listadapter.BaseAdapter .up.|> android.widget.SpinnerAdapter
  com.itbird.design.observer.listadapter.DataSetObservable -up-|> com.itbird.design.observer.listadapter.Observable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
