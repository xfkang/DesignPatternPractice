@startuml

title __V1's Class Diagram__\n

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v1 {
        abstract class com.itbird.design.principle.mvp.v1.BaseActivity {
            # onCreate()
            # onDestroy()
            {abstract} ~ createPresenter()
        }
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v1 {
        class com.itbird.design.principle.mvp.v1.BasePresenter {
            ~ mIView : WeakReference<V>
            + getView()
            + isViewAttached()
            + onAttach()
            + onDetach()
        }
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v1 {
        interface com.itbird.design.principle.mvp.v1.IPresenter {
            {abstract} + getView()
            {abstract} + isViewAttached()
            {abstract} + onAttach()
            {abstract} + onDetach()
        }
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v1 {
        interface com.itbird.design.principle.mvp.v1.IView {
        }
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v1 {
        class com.itbird.design.principle.mvp.v1.TaskMyActivity {
            ~ mTextView : TextView
            {static} - TAG : String
            + updateTextView()
            # onCreate()
            ~ createPresenter()
        }
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v1 {
        interface com.itbird.design.principle.mvp.v1.TaskMyContract {
        }
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v1 {
        interface com.itbird.design.principle.mvp.v1.TaskMyContract.Presenter {
            {abstract} + loadDataFromModel()
        }
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v1 {
        interface com.itbird.design.principle.mvp.v1.TaskMyContract.View {
            {abstract} + updateTextView()
        }
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v1 {
        class com.itbird.design.principle.mvp.v1.TaskMyPresenter {
            {static} - TAG : String
            + loadDataFromModel()
        }
      }
    }
  }
  

  com.itbird.design.principle.mvp.v1.BaseActivity .up.|> com.itbird.design.principle.mvp.v1.IView
  com.itbird.design.principle.mvp.v1.BaseActivity -up-|> android.app.Activity
  com.itbird.design.principle.mvp.v1.BaseActivity o-- com.itbird.design.principle.mvp.v1.IPresenter : mPresenter
  com.itbird.design.principle.mvp.v1.BasePresenter .up.|> com.itbird.design.principle.mvp.v1.IPresenter
  com.itbird.design.principle.mvp.v1.TaskMyActivity .up.|> com.itbird.design.principle.mvp.v1.TaskMyContract.View
  com.itbird.design.principle.mvp.v1.TaskMyActivity -up-|> com.itbird.design.principle.mvp.v1.BaseActivity
  com.itbird.design.principle.mvp.v1.TaskMyActivity o-- com.itbird.design.principle.mvp.v1.TaskMyPresenter : mTaskPresenter
  com.itbird.design.principle.mvp.v1.TaskMyContract +-down- com.itbird.design.principle.mvp.v1.TaskMyContract.Presenter
  com.itbird.design.principle.mvp.v1.TaskMyContract +-down- com.itbird.design.principle.mvp.v1.TaskMyContract.View
  com.itbird.design.principle.mvp.v1.TaskMyPresenter .up.|> com.itbird.design.principle.mvp.v1.TaskMyContract.Presenter
  com.itbird.design.principle.mvp.v1.TaskMyPresenter -up-|> com.itbird.design.principle.mvp.v1.BasePresenter


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
