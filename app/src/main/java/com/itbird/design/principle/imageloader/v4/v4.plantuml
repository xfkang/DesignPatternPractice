@startuml

title __V4's Class Diagram__\n

  namespace com.itbird.design {
    namespace principle.imageloader.v4 {
      class com.itbird.design.principle.imageloader.v4.DiskCache {
          - TAG : String
          - mRootDir : File
          + getCache()
          + init()
          + putCache()
          + removeCache()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle.imageloader.v4 {
      interface com.itbird.design.principle.imageloader.v4.DownloadCallback {
          {abstract} + downloadError()
          {abstract} + downloadProcess()
          {abstract} + downloadSuccess()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle.imageloader.v4 {
      interface com.itbird.design.principle.imageloader.v4.ICache {
          {abstract} + getCache()
          {abstract} + init()
          {abstract} + putCache()
          {abstract} + removeCache()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle.imageloader.v4 {
      interface com.itbird.design.principle.imageloader.v4.IDownloadRequest {
          {abstract} + download()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle.imageloader.v4 {
      class com.itbird.design.principle.imageloader.v4.ImageLoader {
          {static} - TAG : String
          - mDefaultCache : ICache<Bitmap>
          - mHandler : Handler
          {static} - mInstance : ImageLoader
          - mRef : WeakReference<Context>
          {static} + getInstance()
          + setImageCache()
          + setImageDownloadImpl()
          + setImageView()
          - ImageLoader()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle.imageloader.v4 {
      class com.itbird.design.principle.imageloader.v4.MemoryCache {
          - mImageCache : LruCache<String, Bitmap>
          + getCache()
          + init()
          + putCache()
          + removeCache()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle.imageloader.v4 {
      class com.itbird.design.principle.imageloader.v4.MyImageDownload {
          - TAG : String
          - mExecutor : ExecutorService
          + MyImageDownload()
          + download()
          - downloadUrlBitmap()
      }
    }
  }
  

  com.itbird.design.principle.imageloader.v4.DiskCache .up.|> com.itbird.design.principle.imageloader.v4.ICache
  com.itbird.design.principle.imageloader.v4.ImageLoader .up.|> com.itbird.design.factory.imageLoader.v5.ILoadImage
  com.itbird.design.principle.imageloader.v4.ImageLoader o-- com.itbird.design.principle.imageloader.v4.IDownloadRequest : mDefaultDownloadRequest
  com.itbird.design.principle.imageloader.v4.ImageLoader o-- com.itbird.design.principle.imageloader.v4.IDownloadRequest : mDownloadRequest
  com.itbird.design.principle.imageloader.v4.ImageLoader o-- com.itbird.design.principle.imageloader.v4.ICache : mImageCache
  com.itbird.design.principle.imageloader.v4.MemoryCache .up.|> com.itbird.design.principle.imageloader.v4.ICache
  com.itbird.design.principle.imageloader.v4.MyImageDownload .up.|> com.itbird.design.principle.imageloader.v4.IDownloadRequest


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
