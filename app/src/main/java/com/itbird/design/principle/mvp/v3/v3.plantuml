@startuml

title __V3's Class Diagram__\n

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v3 {
        abstract class com.itbird.design.principle.mvp.v3.BaseActivity {
            # onCreate()
            # onDestroy()
            {abstract} ~ initPresenter()
        }
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v3 {
        abstract class com.itbird.design.principle.mvp.v3.BaseFragment {
            + onDestroyView()
            + onViewCreated()
            {abstract} ~ initPresenter()
        }
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v3 {
        abstract class com.itbird.design.principle.mvp.v3.BasePresenter {
            ~ mIView : WeakReference<V>
            + getView()
            + isViewAttached()
            + onAttach()
            + onDetach()
        }
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v3 {
        interface com.itbird.design.principle.mvp.v3.IPresenter {
            {abstract} + getView()
            {abstract} + isViewAttached()
            {abstract} + onAttach()
            {abstract} + onDetach()
        }
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v3 {
        class com.itbird.design.principle.mvp.v3.TaskMyActivity {
            ~ mTextView : TextView
            {static} - TAG : String
            + updateTextView()
            # onCreate()
            ~ initPresenter()
        }
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v3 {
        interface com.itbird.design.principle.mvp.v3.TaskMyContract {
        }
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v3 {
        interface com.itbird.design.principle.mvp.v3.TaskMyContract.Presenter {
            {abstract} + loadDataFromModel()
        }
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v3 {
        interface com.itbird.design.principle.mvp.v3.TaskMyContract.View {
            {abstract} + updateTextView()
        }
      }
    }
  }
  

  namespace com.itbird.design {
    namespace principle {
      namespace mvp.v3 {
        class com.itbird.design.principle.mvp.v3.TaskMyPresenter {
            {static} - TAG : String
            + loadDataFromModel()
        }
      }
    }
  }
  

  com.itbird.design.principle.mvp.v3.BaseActivity -up-|> android.app.Activity
  com.itbird.design.principle.mvp.v3.BaseActivity o-- T : mPresenter
  com.itbird.design.principle.mvp.v3.BaseFragment -up-|> androidx.fragment.app.Fragment
  com.itbird.design.principle.mvp.v3.BaseFragment o-- T : mPresenter
  com.itbird.design.principle.mvp.v3.BasePresenter .up.|> com.itbird.design.principle.mvp.v3.IPresenter
  com.itbird.design.principle.mvp.v3.TaskMyActivity .up.|> com.itbird.design.principle.mvp.v3.TaskMyContract.View
  com.itbird.design.principle.mvp.v3.TaskMyActivity -up-|> com.itbird.design.principle.mvp.v3.BaseActivity
  com.itbird.design.principle.mvp.v3.TaskMyContract +-down- com.itbird.design.principle.mvp.v3.TaskMyContract.Presenter
  com.itbird.design.principle.mvp.v3.TaskMyContract +-down- com.itbird.design.principle.mvp.v3.TaskMyContract.View
  com.itbird.design.principle.mvp.v3.TaskMyPresenter .up.|> com.itbird.design.principle.mvp.v3.TaskMyContract.Presenter
  com.itbird.design.principle.mvp.v3.TaskMyPresenter -up-|> com.itbird.design.principle.mvp.v3.BasePresenter


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
