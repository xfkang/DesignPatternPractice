@startuml

title __STORAGE's Class Diagram__\n

  namespace com.itbird.design {
    namespace factory.storage {
      class com.itbird.design.factory.storage.DiskStorageHandler {
          + getBoolean()
          + getDouble()
          + getInt()
          + getLong()
          + getObject()
          + getString()
          + save()
          + save()
          + save()
          + save()
          + save()
          + save()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace factory.storage {
      interface com.itbird.design.factory.storage.IStorage {
          {abstract} + getBoolean()
          {abstract} + getDouble()
          {abstract} + getInt()
          {abstract} + getLong()
          {abstract} + getObject()
          {abstract} + getString()
          {abstract} + save()
          {abstract} + save()
          {abstract} + save()
          {abstract} + save()
          {abstract} + save()
          {abstract} + save()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace factory.storage {
      interface com.itbird.design.factory.storage.IStorageFactroy {
          {abstract} + getStorageHandler()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace factory.storage {
      class com.itbird.design.factory.storage.MemoryStorageHandler {
          {static} - mCache : LruCache<String, Object>
          + getBoolean()
          + getDouble()
          + getInt()
          + getLong()
          + getObject()
          + getString()
          + save()
          + save()
          + save()
          + save()
          + save()
          + save()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace factory.storage {
      class com.itbird.design.factory.storage.PreferencesStorageHandler {
          + getBoolean()
          + getDouble()
          + getInt()
          + getLong()
          + getObject()
          + getString()
          + save()
          + save()
          + save()
          + save()
          + save()
          + save()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace factory.storage {
      class com.itbird.design.factory.storage.StorageFactroy {
          {static} + getInstance()
          + getStorageHandler()
          - StorageFactroy()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace factory.storage {
      class com.itbird.design.factory.storage.StorageFactroy.StorageFactroyHolder {
          {static} ~ instance : StorageFactroy
      }
    }
  }
  

  com.itbird.design.factory.storage.DiskStorageHandler .up.|> com.itbird.design.factory.storage.IStorage
  com.itbird.design.factory.storage.MemoryStorageHandler .up.|> com.itbird.design.factory.storage.IStorage
  com.itbird.design.factory.storage.PreferencesStorageHandler .up.|> com.itbird.design.factory.storage.IStorage
  com.itbird.design.factory.storage.StorageFactroy .up.|> com.itbird.design.factory.storage.IStorageFactroy
  com.itbird.design.factory.storage.StorageFactroy +-down- com.itbird.design.factory.storage.StorageFactroy.StorageFactroyHolder


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
