@startuml

title __UPGRADE's Class Diagram__\n

  namespace com.itbird.design {
    namespace chaiin.upgrade {
      class com.itbird.design.chaiin.upgrade.ASystemUpgradeRequestHandler {
          ~ handleUpgradeRequest()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace chaiin.upgrade {
      class com.itbird.design.chaiin.upgrade.BSystemUpgradeRequestHandler {
          ~ handleUpgradeRequest()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace chaiin.upgrade {
      class com.itbird.design.chaiin.upgrade.CSystemUpgradeRequestHandler {
          ~ handleUpgradeRequest()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace chaiin.upgrade {
      class com.itbird.design.chaiin.upgrade.InitUpgradeRequestHandler {
          ~ handleUpgradeRequest()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace chaiin.upgrade {
      interface com.itbird.design.chaiin.upgrade.UpgradeErrorCode {
          {static} + ZIP_PACKAGE_PARSE_EROOR : int
      }
    }
  }
  

  namespace com.itbird.design {
    namespace chaiin.upgrade {
      class com.itbird.design.chaiin.upgrade.UpgradeManager {
          {static} + getInstance()
          + startUpgrade()
          ~ UpgradeManager()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace chaiin.upgrade {
      class com.itbird.design.chaiin.upgrade.UpgradeManager.UpgradeManagerHolder {
          {static} ~ mInstance : UpgradeManager
      }
    }
  }
  

  namespace com.itbird.design {
    namespace chaiin.upgrade {
      class com.itbird.design.chaiin.upgrade.UpgradeRequest {
          ~ bSystemPath : String
          - aSystemPath : String
          - mcuPath : String
          - name : String
          - path : String
          + UpgradeRequest()
          + getMcuPath()
          + getName()
          + getPath()
          + getaSystemPath()
          + getbSystemPath()
          + setMcuPath()
          + setName()
          + setPath()
          + setaSystemPath()
          + setbSystemPath()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace chaiin.upgrade {
      abstract class com.itbird.design.chaiin.upgrade.UpgradeRequestHandler {
          + TAG()
          + handlerRequest()
          + setNextHandler()
          {abstract} ~ handleUpgradeRequest()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace chaiin.upgrade {
      interface com.itbird.design.chaiin.upgrade.UpgradeResultObservable {
          {abstract} + onError()
          {abstract} + onUpgradeProgressCallback()
      }
    }
  }
  

  namespace com.itbird.design {
    namespace chaiin.upgrade {
      class com.itbird.design.chaiin.upgrade.UpgradeResultObservableAdapter {
          + attatchUpgradeObserver()
          + detachUpgradeObserver()
          + onError()
          + onUpgradeProgressCallback()
      }
    }
  }
  

  com.itbird.design.chaiin.upgrade.ASystemUpgradeRequestHandler -up-|> com.itbird.design.chaiin.upgrade.UpgradeRequestHandler
  com.itbird.design.chaiin.upgrade.BSystemUpgradeRequestHandler -up-|> com.itbird.design.chaiin.upgrade.UpgradeRequestHandler
  com.itbird.design.chaiin.upgrade.CSystemUpgradeRequestHandler -up-|> com.itbird.design.chaiin.upgrade.UpgradeRequestHandler
  com.itbird.design.chaiin.upgrade.InitUpgradeRequestHandler -up-|> com.itbird.design.chaiin.upgrade.UpgradeRequestHandler
  com.itbird.design.chaiin.upgrade.UpgradeManager o-- com.itbird.design.chaiin.upgrade.UpgradeResultObservableAdapter : mAdapter
  com.itbird.design.chaiin.upgrade.UpgradeManager +-down- com.itbird.design.chaiin.upgrade.UpgradeManager.UpgradeManagerHolder
  com.itbird.design.chaiin.upgrade.UpgradeRequestHandler o-- com.itbird.design.chaiin.upgrade.UpgradeRequestHandler : nextHandler
  com.itbird.design.chaiin.upgrade.UpgradeResultObservableAdapter .up.|> com.itbird.design.chaiin.upgrade.UpgradeResultObservable
  com.itbird.design.chaiin.upgrade.UpgradeResultObservableAdapter -up-|> android.database.Observable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
